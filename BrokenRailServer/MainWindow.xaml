<Window x:Class="BrokenRailServer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BrokenRailServer"
        xmlns:classes="clr-namespace:BrokenRailServer.Classes"
        xmlns:ctrl="clr-namespace:BrokenRailServer.UserControls"
        mc:Ignorable="d"
        Title="断轨服务器" 
        Height="700" Width="1000"
        MinHeight="400" MinWidth="700"
        Loaded="Window_Loaded">
    <Grid>
        <TabControl>
            <TabItem Header="服务" Style="{DynamicResource TabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="155*"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <CheckBox x:Name="cbxSelectAll" HorizontalAlignment="Right" VerticalAlignment="Center" Checked="cbxSelectAll_Checked" Unchecked="cbxSelectAll_Unchecked">全选</CheckBox>
                        </DockPanel>
                        <ScrollViewer Grid.Row="1">
                            <StackPanel x:Name="stpIpAndPortContainer" >
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="155*"/>
                            <RowDefinition Height="150"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="200"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <Label>服务器IP：</Label>
                                <TextBox x:Name="txtServerIP" Width="100" VerticalContentAlignment="Center">127.0.0.1</TextBox>
                                <Label>端口号：</Label>
                                <TextBox x:Name="txtServerPort" Width="50" VerticalContentAlignment="Center">16479</TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                <Button x:Name="btnStartListening" Width="80" Click="btnStartListening_Click">开始监听</Button>
                                <Button x:Name="btnStopListening" Width="80" Margin="40 0 0 0" Click="btnStopListening_Click">结束监听</Button>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="155*"/>
                            </Grid.RowDefinitions>
                            <DockPanel>
                                <Label Grid.Row="0">接收：</Label>
                                <Label x:Name="lblPackageCount" Content="{Binding PackageCount}"></Label>
                                <Label>个数据包</Label>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <ToggleButton x:Name="tbtnPin" HorizontalAlignment="Right" VerticalAlignment="Top" Height="18" Width="18" Margin="0,5,10,0"
                                                  BorderThickness="0" Background="Transparent" Style="{DynamicResource ToggleButtonStyle1}"
                                                  MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                                                  ToggleButton.Checked="tbtnPin_Checked" ToggleButton.Unchecked="tbtnPin_Unchecked" RenderTransformOrigin="0.5,0.5">
                                        <ToggleButton.Resources>
                                            <Style x:Key="FocusVisual">
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
                                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                                            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="Button.IsDefaulted" Value="true">
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Resources>
                                        <ToggleButton.RenderTransform>
                                            <RotateTransform x:Name="trans" Angle="0"/>
                                        </ToggleButton.RenderTransform>
                                        <ToggleButton.Triggers>
                                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                <BeginStoryboard >
                                                    <Storyboard>
                                                        <DoubleAnimation From="0" To="-90" RepeatBehavior="1x" Duration="0:0:0.1"
                                                                         Storyboard.TargetName="trans"
                                                                         Storyboard.TargetProperty="Angle"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                <BeginStoryboard >
                                                    <Storyboard>
                                                        <DoubleAnimation From="-90" To="0" RepeatBehavior="1x" Duration="0:0:0.1"
                                                                         Storyboard.TargetName="trans"
                                                                         Storyboard.TargetProperty="Angle"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToggleButton.Triggers>
                                        <Path Fill="Black" Width="10" Height="13" Stretch="Fill" Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z"
                                               RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <RotateTransform Angle="90"/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                    <Button x:Name="btnClear" Width="80" Click="btnClear_Click">清空</Button>
                                </StackPanel>
                             </DockPanel>
                            <TextBox x:Name="txtReceive" IsReadOnly="True" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto"></TextBox>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="155*"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0">发送：</Label>
                            <Button x:Name="btnSend" Width="80" HorizontalAlignment="Right" Click="btnSend_Click">发送</Button>
                            <TextBox x:Name="txtSend" Grid.Row="1"></TextBox>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="状态" Style="{DynamicResource TabItemStyle}">
                <Grid x:Name="gridMain">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="#FF00ccff" Offset="1"/>
                            <GradientStop Color="#FFFFF503"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="100*"/>
                        <RowDefinition Height="100*"/>
                        <RowDefinition Height="120*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="120*"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0">
                        <Menu x:Name="menu" Height="25" HorizontalAlignment="Left">
                            <MenuItem x:Name="miRefreshDevices" Header="刷新设备" FontSize="15" Click="miRefreshDevices_Click"></MenuItem>
                            <MenuItem x:Name="miCommand" Header="指令" FontSize="15">
                                <MenuItem x:Name="miGetAllRailInfo" Header="获取所有终端铁轨信息" Click="miGetAllRailInfo_Click"></MenuItem>
                                <MenuItem x:Name="miGetOneSectionInfo" Header="获取某段铁轨信息" Click="miGetOneSectionInfo_Click"></MenuItem>
                                <MenuItem x:Name="miRealTimeConfig" Header="实时时钟配置" Click="miRealTimeConfig_Click"></MenuItem>
                                <MenuItem x:Name="miEraseFlash" Header="擦除Flash" Click="miEraseFlash_Click"></MenuItem>
                            </MenuItem>
                            <MenuItem x:Name="miViewHistory" Header="回看历史" Click="miViewHistory_Click" FontSize="15"></MenuItem>
                            <!--<MenuItem x:Name="miExportExcel" Header="导出Excel" Click="miExportExcel_Click" FontSize="15"></MenuItem>-->
                        </Menu>
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
                            <Ellipse x:Name="elpIndicator" Fill="Green" Height="15" Width="15"></Ellipse>
                            <Label x:Name="lblPackageCountCopy"></Label>
                        </StackPanel>
                    </DockPanel>
                    <ScrollViewer x:Name="svContainer" Grid.Row="3" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                        <StackPanel VerticalAlignment="Bottom">
                            <Canvas x:Name="cvsRail1" Height="36" Margin="20,0" HorizontalAlignment="Left">
                            </Canvas>
                            <Canvas x:Name="cvsDevices" Height="36" Margin="20,0">
                            </Canvas>
                            <Canvas x:Name="cvsRail2" Height="36" Margin="20,0">
                            </Canvas>
                        </StackPanel>
                    </ScrollViewer>
                    <classes:ModernProgressRing x:Name="modernProgressRing" Grid.RowSpan="6" IsActive="False" Width="100" Height="100" Panel.ZIndex="100"
                                  Style="{StaticResource CircleProgressRingStyle}" >
                    </classes:ModernProgressRing>
                    <!--<GridSplitter Grid.Row="4" Background="AntiqueWhite" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="3"></GridSplitter>
                    <local:DataShowUserControl x:Name="dataShowUserCtrl" Grid.Row="5"></local:DataShowUserControl>-->
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</Window>
